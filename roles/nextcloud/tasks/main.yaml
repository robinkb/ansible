---
- name: Ensure HTTPD is installed
  become: true
  package:
    state: present
    name: httpd

- name: Ensure HTTPD does not listen on port 80
  become: true
  lineinfile:
    state: absent
    path: /etc/httpd/conf/httpd.conf
    line: Listen 80
  notify:
    - reload httpd

- name: Ensure PHP modules are installed
  become: true
  package:
    state: present
    name: "{{ item }}"
  with_items:
    - php
    - php-common
    - php-gd
    - php-intl
    - php-json
    - php-mbstring
    - php-mcrypt
    - php-opcache
    - php-pecl-apcu
    - php-pecl-imagick
    - php-pecl-zip
    - php-pgsql
    - php-process
    - php-xml

- name: Ensure utility software is installed
  become: true
  package:
    state: present
    name: unzip

- name: Ensure Nextcloud directories are present
  become: true
  file:
    state: directory
    path: "{{ item }}"
    owner: apache
    group: apache
  with_items:
    - /var/www/html/apps
    - /var/www/html/config
    - "{{ nextcloud.data_directory }}"

- include: selinux.yaml
  when: ansible_selinux

- name: Ensure Nextcloud is up-to-date
  lineinfile:
    state: present
    dest: /var/www/html/version.php
    line: "$OC_VersionString = '{{ nextcloud.version }}';"
  register: result
  check_mode: true
  failed_when: false
  changed_when: result.changed or result.failed
  notify:
    - update nextcloud version

- name: Ensure Nextcloud is installed
  become: true
  become_user: apache
  command: grep -Pe "'installed' => true" /var/www/html/config/config.php
  register: result
  failed_when: false
  changed_when: result.failed
  notify:
    - install nextcloud

- name: Ensure Nextcloud is configured
  become: true
  template:
    src: "{{ item }}"
    dest: /var/www/html/config/{{ item }}
  with_items:
    - apcu.config.php
    - logging.config.php
    - pretty-urls.config.php
    - proxy.config.php
    - security.config.php
    - trusted-domains.config.php

- name: Ensure .htaccess file contains rewrite rules
  command: grep -Pe "^\s*RewriteBase.*$" /var/www/html/.htaccess
  register: result
  failed_when: false
  changed_when: result.failed
  notify:
    - update nextcloud htaccess

- name: Ensure Nextcloud Cron Systemd service and timer are installed
  become: true
  template:
    src: "{{ item }}"
    dest: /etc/systemd/system/{{ item }}
  with_items:
    - nextcloud-cron.service
    - nextcloud-cron.timer

- name: Ensure Nextcloud Cron timer is enabled
  become: true
  service:
    name: nextcloud-cron.timer
    state: started
    enabled: true

- name: Ensure httpd configuration is present
  become: true
  template:
    src: httpd.conf
    dest: /etc/httpd/conf.d/nextcloud.conf
    owner: apache
    group: apache
  notify:
    - reload httpd

- name: Ensure proxy configuration is present
  become: true
  template:
    src: traefik.toml
    dest: /etc/traefik/rules.d/nextcloud.toml

- name: Ensure PHP configuration is present
  become: true
  template:
    src: php.ini
    dest: /etc/php.d/99-nextcloud.ini

- name: Ensure HTTPD service is running and enabled
  become: true
  service:
    state: started
    name: httpd.service
    enabled: true

- name: Ensure Nextcloud PostgreSQL user is present
  become: true
  become_user: postgres
  postgresql_user:
    state: present
    name: "{{ nextcloud.db_username }}"
    password: "{{ nextcloud.db_password }}"

- name: Ensure Nextcloud PostgreSQL database is present
  become: true
  become_user: postgres
  postgresql_db:
    state: present
    name: nextcloud
    owner: nextcloud

- name: Ensure Nextcloud has privileges on PostgreSQL database
  become: true
  become_user: postgres
  postgresql_privs:
    state: present
    database: nextcloud
    privs: ALL
    roles: "{{ nextcloud.db_username }}"
    type: database
